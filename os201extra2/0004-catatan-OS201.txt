Shafiya Ayu Adzhani / B / 1806235845 / adzshaf

REV08 WED Aug 5   23:45:02 WITA 2020
REV07 WED Aug 5   14:41:00 WITA 2020
REV06 WED Aug 5   05:24:01 WITA 2020
REV05 TUE Aug 4   23:12:43 WITA 2020
REV04 MON Aug 3   21:45:21 WITA 2020
REV03 THU Jul 30  22:01:22 WITA 2020
REV02 WED Jul 29  23:30:21 WITA 2020
REV01 TUE Jul 28  22:01:35 WITA 2020

1. Buat catatan tambahan untuk pelaksanaan
===========================================
Catatan dibuat berdasarkan hasil survey oleh peserta os201extra2 dan diisi oleh peserta OS kelas A, B, dan C

a. Persiapan UAS
   > Kendala:
	- Mahasiswa tidak tahu cara melakukan beberapa perintah dari soal
        - Lupa key dan cara enkripsi
	- Kesulitan dalam memahami beberapa perintah yang diberikan soal
   > Kelebihan:
	- Langkah-langkah dijelaskan dan mudah dipahami
	- Bobot nilai yang diberikan cukup
	- Mudah dilakukan karena dijelaskan secara detail di SCELE
	- Waktu pengerjaan lama
	- Terdapat log untuk mengecek apakah sudah benar atau belum
   > Kekurangan:
	- Tidak tahu bahwa copy paste ke GitHub bisa mengakibatkan error
	- Tidak dijelaskan tujuan persiapan dan gambaran pelaksanaan UAS

  Dapat disimpulkan bahwa pengerjaan tahap ini cukup mudah. Pelaksanaan waktu yang panjang juga memudahkan peserta untuk bertanya jika mengalami kesulitan. Penjelasan pada pengerjaan soal juga sudah detail.

b. Tahap 1
   > Kendala:
	- Masih belum terbiasa menggunakan terminal pada linux sehingga menghambat pengerjaan
	- Pengerjaan soal membutuhkan kemampuan pembuatan script
   > Kelebihan:
	- Dokumentasi mengenai pengerjaan soal sangat jelas
	- Diberikan contoh yang benar (repositori cbkadal)
	- Menjadi tahu bagaimana mengatur GitHub Pages dan membuat URL baru
   > Kekurangan:
	- Kurang penjelasan mengenai soal, seperti maksud dari SEQNO dan SUMNO.
   Dapat disimpulkan bahwa dari tahap ini, peserta belajar membuat GitHUb Pages dan script yang nantinya berguna dalam pengerjaan tahap selanjutnya. Dari hasil tahap 1, peserta juga dapat mempelajari kesalahan-kesalahan kecil salah penamaan file, copy-paste langsung ke web GitHub akan berakibat tidak lanjut ke tahap-tahap berikutnya. Oleh karena itu, peserta menjadi familiar dengan sistem ujian dan lebih berhati-hati.

c. Tahap 2
   > Kendala:
	- Lebih rumit dibandingkan tahap 1
	- Implementasi mmap untuk multithreading tidak ada contohnya pada demo
   > Kelebihan:
	- Menjadi lebih paham bagaimana semafor bekerja untuk menghindari race condition dalam mengakses memori yang sama
	- Menjadi lebih paham pengunaan semafor biasa dan semafor untuk mutex
	- Menjadi tahu bagaimana memetakan sebuah file ke memory di C dengan mmap
        - Tugas dilakukan secara berkelompok sehingga beban menjadi berkurang
   > Kekurangan:
	- Penjelasan soal kurang jelas. Lebih jelas jika mengikuti contoh program
   Dapat disimpulkan bahwa tahap 2 memiliki tingkat kesulitan lebih tinggi dibanding tahap sebelumnya. Namun, dengan adanya pembagian kelompok, tugas dapat dilakukan dengan lebih mudah secara bersama-sama. Peserta yang kurang memahami materi dapat membaca-baca lagi mengenai materi dari Week 06 - Week 10.

d. Tahap 3
   > Kendala:
	- Penilaian tidak dijabarkan
	- Hanya beberapa orang yang mengerti dan juga aktif dalam kelompok karena sudah dikelompokkan berdasarkan status 
	- Banyak instruksi dan file yang bersifat ambigu sehingga menyulitkan peserta ujian
	- Kelompok yang kurang bisa diajak kerja sama karena semuanya tidak ada yang memahami materi sehingga perlu lebih ekstra bertanya-tanya kelompok lain untuk memahami soal
   > Kelebihan:
	- Mahasiswa sudah terbiasa dengan tahap 2. Karena mirip dengan tahap 2, maka sudah familiar sehingga lebih mudah untuk mengerjakan tahap 3.
	- Mahasiswa dengan status TERM3 deadline waktunya panjang dan soalnya tidak beda jauh dengan tugas 2
	- Tugas dikerjakan secara berkelompok
	- Mendapatkan ilmu yang lebih dalam lagi mengenai semafor
   > Kekurangan:
	- Perintah/ revisi soal yang keluar saat berjalannya ujian membingungkan
	- Ada bagian yang kurang ditekankan, seperti penamaan file
	- Hanya ada satu file yang bisa diedit sehingga sulit dalam pembagian tugas dengan anggota lain
	- Keterangan soal mengenai soal dapat dikerjakan sesuai kreativitas masing-masing menimbulkan perdebatan

   Dapat disimpulkan bahwa tingkat kesulitan pada tahap 3 lebih rendah dibanding tahap 2. Dengan ditambahkannya penamaan kontributor pada kode tugas tahap 3 mengurangi kendala adanya free rider. Namun, bagi beberapa orang termasuk saya, masih ada yang tidak enak jika tidak memasukkan nama rekan kelompok pada nama kontributor.

e. Tahap 4
   > Kendala:
	- Beberapa mahasiswa belum mengerti mengenai materi yang ditanyakan
	- Terdapat masalah koordinasi revisi sehingga ada perbedaan kode
	- File-file di folder uas-pribadi dan uas-bersama cukup membingungkan
   > Kelebihan:
	- Menjadi mengerti cara menggunakan synchronous semafor
        - Terdapat method yang bisa diambil dan dimodifikasi dari tahap sebelumnya
	- Tugas dikerjakan secara berkelompok

   Menurut responden, waktu pengerjaan selama satu hari cukup untuk mengecek revisi-revisi yang sudah diberikan.

f. Tahap 5
   > Kendala:
	- Kurang paham mengenai FUSE
	- Kurang mengerti perintah soal dan sulit paham berkas-berkas yang diberikan
   > Kelebihan:
	- Mahasiswa menjadi lebih tahu salah satu implementasi FUSE
	- Terdapat dokumentasi mengenai soal
   > Kekurangan:
	- Dokumentasi soal sulit dimengerti
	- Kurang penjelasan teknis
	- Waktu pengerjaan singkat
	- Sumber belajar hanya materi
	- Tugas tidak lagi dikerjakan secara berkelompok

   Dari pernyataan responden, walaupun mengalami kendala dalam pengerjaan, dirasakan bahwa akan lebih mudah mengerti jika sudah memahami mengenai FUSE. Menurut saya, seharusnya dimasukkan materi mengenai implementasi FUSE pada demo. Oleh karena itu, peserta tidak hanya paham FUSE secara teori namun juga dipraktekkan.

  Kelebihan pelaksanaan UAS OS:
  - Jangka waktu yang panjang mengakomodir peserta yang memiliki koneksi internet terbatas. Menurut saya, dari segi waktu, OS lebih baik dibanding ujian lainnya yang memakan waktu 2 atau 3 jam saja dengan soal yang sangat banyak dan tidak menmungkinkan untuk dikerjakan dalam waktu yang singkat.
  - Pengerjaan secara kelompok memudahkan peserta untuk memahami dan menjawab soal

  Kritik terhadap pelaksanaan UAS OS:
  - Waktu pengerjaan UAS OS terlalu lama. Peserta yang memiliki keperluan lain terbebani dengan jangka waktu UAS yang lama
  - Usaha untuk mencegah adanya free rider belum sepenuhnya berhasil. Beberapa peserta seperti saya tidak enak jika tidak memasukkan nama anggota lain pada nama kontributor.
  - Karena setiap peserta pada suatu kelompok mengumpulkan filenya masing-masing, maka ada kemungkinan beberapa peserta dari kelompok itu tidak lulus suatu tahap jika terdapat kesalahan pada file/kode. Menurut saya, ini kurang fair jika ada free rider yang malah lulus ke tahap sebelumnya, namun yang benar-benar mengerjakan malah tidak lulus karena salah pada penamaan file/kode.
  
  Saran terhadap pelaksanaan UAS OS:
  - Jumlah tahap bisa dipotong 
  - Untuk mencegah adanya free rider, bisa dibuat repository/folder dimana anggota kelompok wajib memberikan kontribusi dengan commit. Karena Git dengan baik merekam commit dan siapa membuatnya, maka dapat ditentukan mana yang berkontribusi atau tidak
  - Untuk membuat fair pengerjaan tugas kelompok, seharusnya dibuat satu repository/folder untuk satu kelompok. Penilaian anggota kelompok dapat dilihat dari kontribusi commit yang diberikan. Hal ini membuat semua anggota bisa lulus dengan syarat memenuhi ketentuan, kecuali ada anggota yang tidak berkontribusi sama sekali.

2.  Berikan penjelasan (dugaan) berikut ini:
==================================================================
a. Scripting
   Scripting adalah kegiatan menulis serangkaian perintah untuk dieksekusi oleh shell. Scripting dapat menggabungkan perintah yang kita lakukan pada bash yang panjang dan berulang dari ke dalam satu script line function call. Hasil Scripting yang disimpan dapat mempermudah user untuk record perintah yang pernah dilakukan dan recalling perintah yang sudah dilakukan. Bash Linux tersedia di hampir semua varian Linux dan tidak memerlukan instalasi terpisah, untuk memulai Scripting dapat menggunakan command "script namafile.txt" namafile.txt adalah file baru yang akan menyimpan hasil dari script tersebut. Hasil dari script tersebut terdiri dari:
   1. Tanggal dan jam dari "Script started"
   2. Tanggal dan jam dari "Script done"
   3. Tanggal dan jam dari "Prompt"
  dan untuk menyelesaikan script dapat menggunakan command "exit" dan hasil script sudah tersimpan pada file baru tadi.

b. FUSE
   FUSE (Filesystem in Userspace) merupakan suatu software interface pada UNIX. Fitur paling penting dari FUSE adalah FUSE memperbolehkan non-privileged user untuk melakukan mount dengan aman. Biasanya FUSE digunakan untuk membuat virtual file system. Terdapat 3 hal yang harus dibuat dalam pembuatan FUSE, yaitu kernel side module, libfuse, dan aplikasinya. Untuk mengimplementasikan file system, harus menulis program terlebih dahulu yang akan berfungsi untuk melakukan mount pada file system yang baru, merespon jika ada operasi read/write/stat/ dan program ini juga akan akan tertaut dengan libfuse. Ketika filesyetem berhasil di-mount, handler akan teregister dengan kernel dan meneruskan operasi read/write/stat/ kepada handler untuk dilakukan respon terhadap operasi tersebut.
c. Git
   Git adalah sistem version control yang digunakan para developer untuk mengembangkan software secara bersama-bersama. Fungsi utama git yaitu mengatur versi dari source code program dengan memberi tanda baris dan kode mana yang ditambah atau diganti. Contoh lain dari version control: Mercurial, SVN
   - Git init: untuk membuat repository pada file lokal yang nantinya ada folder .git
   - Git status: untuk mengetahui status dari repository lokal (apakah ada perubahan dari commit terakhir, file-file yang sudah dicommit)
   - Git add: menambahkan file yang mengalami perubahan untuk dimasukkan ke commit
   - Git commit : untuk menyimpan perubahan yang sudah ditambahkan dari `git add`
   - Git push: untuk mengirimkan perubahan file setelah di-commit ke remote repository.
   - Git branch: melihat seluruh branch yang ada pada repositori
   - Git checkout: menukar branch yang dikerjakan ke branch lain
   - GIt merge: untuk menggabungkan branch yang aktif dan branch yang dipilih
   - Git clone: membuat salinan dari repository remote ke lokal

d. GitHub
   GitHub adalah sebuah aplikasi berbasis web dengan Version Control System (VCS) yang menyediakan layanan untuk menyimpan repository dengan gratis. GitHub menggunakan sistem version control Git.  Repositori merupakan tempat yang dapat digunakan untuk menyimpan berbagai source code. Dengan GitHub, pengguna dapat melakukan kolaborasi dalam mengerjakan proyek tertentu secara rutin, termasuk melacak dan menyimpan perubahan-perubahan yang terjadi dalam project tersebut. GitHub digunakan perusahaan-perusahaan besar seperti Facebook, Google, dan Twitter. GitHub menyediakan layanan untuk menyimpan repositori yang dapat dilihat publik atau privat (hanya dapat dilihat orang-orang tertentu). Dengan adanya GitHub, pengguna dapat berkontribusi ke proyek Open Source dengan membuat submisi issue (jika terdapat bug pada proyek), pull request (perubahan kode untuk menyelesaikan issue), dan berdiskusi dengan pengguna-pengguna lainnya.
 
e. GitHub Pages
   Github Pages adalah fasilitas hosting web statis (HTML, CSS, JavaScript) yang diberikan secara gratis dengan subdomain .github.io. Setiap user mendapatkan akses untuk memiliki satu subdomain [username].github.io. Jika pengguna ingin membuat web statis pada suatu project, maka webnya dipublish dengan nama [username].github.io/[nama-project].  
   Untuk mempublikasikan halaman web di Github Pages dapat dilakukan dengan beberapa cara:
   1. Github page dari Root repo
   2. Github page di folder
   3. Github page di branch gh-page

f. GnuPG
   GnuPG adalah suatu software yang dipakai untuk melakukan proses enkripsi data, dekripsi data, dan penandatanganan digital untuk selanjutnya dilakukan proses pertukaran data antar perangkat. Enkripsi dengan GPG ini sudah mengimplementasikan standar yang dijelaskan dalam RFC4880 (dikenal juga dengan standar PGP). GPG juga dilengkapi dengan fungsi manajemen kunci keamanan seperti pembuatan kunci, penyuntingan kunci, dan penghapusan kunci keamanan. Setiap kunci yang digenerate pasti mempunyai sepasang kunci (keypair) keamanan yaitu Private Key dan Public Key. Private Key adalah kunci enkripsi yang hanya boleh diakses oleh pemilik kunci, sedangkan public key sebisa mungkin harus disebarkan seluas-luasnya.
   Fungsi private key:
   • Menambahkan tanda tangan pada file yang dikirim. Jika ada tandatangan yang dibuat dengan private key, maka dipastikan file tersebut berasal dari pemilik private key.
   • Membaca file/pesan yang dienkripsi (ditujukan) dengan pasangan public keynya. Jika seseorang mengenkripsi pesan ke suatu public key, maka hanya yang punya private key dari public key itu yang bisa membacanya.
   Fungsi public key:
   • Mengenkripsi file yang ditujukan untuk pemilik private key
   • Memverifikasi signature yang sudah dibuat pada suatu pesan/file. Jika suatu pesan/file sudah ditandangani dengan private key, maka dengan public key yang cocok, dipastikan bahwa file tersebut benar-benar berasal dari pemilik keypair tersebut.

g. SHA1SUM
   SHA1SUM adalah program yang menghitung dan memverifikasi hash yang menggunakan SHA1 (Secure Hash Algorithm 1). Program ini sudah terpasang pada sebagian besar sistem operasi yang menggunakan Linux. Pada UAS OS, file “SHA1SUM” digunakan sebagai berkas yang menyimpan hash berkas-berkas yang diupload di GitHub. Melalui berkas tersebut, kita bisa mengetahui apakah file tersebut adalah file original atau bukan karena jika ada berkas yang diubah sedikitpun (termasuk waktu pembuatan), file tersebut akan menerima hash yang berbeda. Jika seseorang mengubah file pada file-file yang disebutkan pada SHA1SUM, maka akan muncul ketidakcocokan antara hash di file SHA1SUM dengan berkas yang diubah. Oleh karena itu, setiap mengubah file yang disebutkan pada SHA1SUM, maka file SHA1SUM harus kembali digenerate.

h. SHA1SUM.asc
   Format “.asc” merupakan format untuk berkas ASCII yang digunakan oleh suatu software yang dipakai untuk melakukan proses enkripsi data seperti PGP atau GnuPG. File tersebut berisi pesan yang ditandatangani secara digital dan dapat menyimpan informasi tertulis teks biasa, serta informasi biner yang disandikan sebagai teks. File ASC juga menyertakan kunci sebagai teks yang ditandatangani jelas, yang dapat diverifikasi. Oleh karena itu, SHA1SUM.asc merupakan berkas dimana berisi sebuah hasil enkripsi SHA1SUM yang nantinya dapat diverifikasi dan didekripsi (oleh pihak yang ditujukan ketika mengenkripsi) untuk melihat informasi asli yang ada.

3. Bahas dari sudut pandang peserta OS201, berkas berikut ini:
https://rahmatm.samik-ibrahim.vlsm.org/2020/07/exam-from-home-pertama-kali.html
===============================================================================
a. Tantangan
   Ujian dimodifikasi menjadi lebih sulit dengan cara memodifikasi tata cara pengumpulan hasil ujian. Peserta mengalami kendala berupa kesalahan prosedur. Apabila peserta tidak teliti dalam melakukan langkah-langkah prosedur tesebut, peserta bisa langsung tidak lolos pada tahap tertentu. Padahal, peserta tersebut sudah mengerjakan tugas utamanya dengan baik. Banyaknya prosedur langkah-langkah submisi tugas membuat peserta menghabiskan waktu untuk mengerjakannya dibanding untuk mengerjakan soal utamanya.

b. Perangkat pendukung
   Peserta hanya mengetahui fungsi serta cara memakai Git dan GitHub. Untuk perangkat pendukung scripting, GnuPG, dan SHA1SUM peserta tidak familiar sehingga harus mempelajari terlebih dahulu. Mayoritas peserta hanya mengikuti langkah-langkah yang diberikan, namun tidak mengerti maksud dari langkah-langkah tersebut. 

c. Problem
- MS Windows
  Peserta tidak biasa dalam penggunaan sistem di Badak. Oleh karena itu, peserta banyak yang melakukan di media lain yang memiliki format teks berbeda dengan sistem di Badak. Beberapa peserta juga baru mengetahui terdapat perbedaan line break antara CR LF, LF, dan CR.

- GitHub
  Pada saat melakukan push, terkadang berbarengan dengan orang lain sehingga harus berulang ulang melakukan pull dari master dan kembali melakukan push. 

- GitHub Pages
  Peserta belum terbiasa membuat GitHub Pages, sehingga harus melihat dokumentasi terlebih dahulu.

- WhatsApp Group
  • Peserta tidak dapat membedakan pesan mana yang dapat didiskusikan di WhatsApp group atau menggunakan SCELE.
  • Peserta tidak terlalu sering mengecek grup, sehingga bisa terlewatkan informasi penting ataupun dokumentasi pengerjaan soal ujian sebelumnya yang biasa dibahas di kelas 

- W00 - W05
  Peserta sungkan untuk bertanya mengenai topik pada minggu itu. Peserta akan mengalami kesulitan jika tidak belajar sebelum masuk kelas. Peserta sebaiknya belajar dengan melakukan demo dan membuat memo sebelum masuk kelas.

- UTS
  UTS pada tahun ini lebih banyak programmingnya dibandingkan teori, sehingga perlu dipersiapkan dalam memahami dan membuat kodingan. Selain itu, terdapat juga soal teori mengenai bacaan yang sudah dilampirkan dosen pengampu sebelumnya.

- Study From Home
  • Peserta harus belajar lebih keras lagi mengingat tidak dapat dilakukan pembelajaran tatap muka. 
  • Peserta terkadang tidak disiplin dalam mempelajari OS sesuai bobot SKS-nya.
  • Terkadang peserta terlewatkan dalam mengisi forum. Harus diberitahu terlebih dahulu oleh peserta lain.
  • Menurut saya, perlu ada checkpoint tugas untuk memahami sampai mana pemahaman peserta mengenai suatu topik. Dengan adanya checkpoint tugas, peserta dapat memahami materi lebih baik dan terpacu untuk belajar lebih giat.

- YouTube
  Materi dapat dimengerti dengan mudah, namun kurang banyak contoh demo yang diberikan.

- GitHub Page
  Peserta kebanyakan belum mengetahui tentang pemakaian GitHub Page. Oleh karena itu, harus bolak-balik membaca dokumentasi. Selain itu, karena secara default GitHub Page menggunakan Jekyll, peserta juga harus memahami mengenai penggunaan Jekyll.

- GNUPG
  • Peserta terkadang lupa apakah public key nya masih berfungsi atau tidak.
  • Jika key sudah expired, peserta lupa command untuk generate key baru.
  • Peserta kewalahan mengingat banyak command gpg
  • Peserta tidak terbiasa memahami enkripsi dengan key dan armor
  • Peserta belum memahami perbedaan enkripsi simetrik dan asimetrik
  • Peserta lupa akan perbedaan enkripsi dengan/tanpa tanda tangan.
  • Peserta belum memahami perbedaan jenis tanda tangan antara CLEARSIGN, DETACH. dst.

- Zoom
  • Zoom dilakukan pada malam hari dengan asumsi semua peserta sudah tidak ada kegiatan lagi pada malam hari sehingga dapat mengikuti sesi Zoom
  • Beberapa peserta memiliki koneksi internet yang tidak memadai sehingga kesulitan untuk mengikuti sesi Zoom
  • Akan lebih baik jika sebelumnya pembelajaran OS tiap minggunya dilakukan secara sinkronus dengan menggunakan Zoom, sehingga pembelajaran peserta lebih on track

- Email
  • Tanya jawab disarankan dilakukan di SCELE sehingga semua peserta dapat melihat, namun ada beberapa peserta yang kurang nyaman jika bertanya di SCELE

- Scripting
  • Peserta sebelumnya tidak memahami command-command pada proses scripting
  • Jika peserta melakukan kesalahan di tengah proses scripting, harus mengulang lagi dari awal

- OUTSIDE
  • Peserta lebih memilih untuk membuat folder terpisah dari repo "os201" dibanding membuat folder baru OUTSIDE pada "os201" karena beberapa peserta suka menggunakan "git add ." yang akan mempush hasil pekerjaan pada folder OUTSiDE.
  • Penggunaan folder OUTSIDE tidak ditekankan pada instruksi pengerjaan sehingga dirasa kurang penting

- Akun GitHub os201 Bersama
  • Peserta dapat mengisi absen, membuat kelompok, mencoba sandbox pada repo os201 bersama
  • Karena pengerjaan dilakukan bersama-sama pada satu repo, maka peserta akan sering mengalami conflict ketika mempush pekerjaannya ke repo os201 bersama

- SHA1SUM dan SHA1SUM.asc
  • Peserta terkadang lupa command untuk generate SHA1SUM dan SHA1SUM.asc
  • Peserta baru mengetahui bahwa jika ada perubahaan file pada direktori pengerjaan, maka SHA1SUM dan SHA1SUM.asc juga harus digenerate ulang.
  • Peserta kadang lupa memverifikasi apakah SHA1SUM dan SHA1SUM.asc dapat bekerja dengan baik

- Race Condition
  • Peserta sering mengalami conflict pada file absen ketika mengisi absen pada repo os201 bersama

- Absen
  • Peserta sering mengalami conflict pada file absen ketika mengisi absen pada repo os201 bersama
  • Peserta terkadang ketika absen malah mengubah absen peserta lain tanpa mengeceknya terlebih dahulu
  • Peserta seringkali lupa untuk mengecek apakah dirinya sudah terabsen pada file abse
  • Menjawab mengenai peserta yang lupa absen sampai semester mau berakhir, biasanya peserta tersebut tidak mengecek SCELE selama pelaksanaan PJJ berjalan setiap minggunya. Sehingga ia tidak tahu bahwa harus mengisi absen

- Persiapan UAS
  • Persiapan UAS dijelaskan secara detail pada SCELE, peserta dapat mengikuti dengan baik
  • Beberapa peserta lupa jika keynya masih berfungsi atau tidak
  • Peserta lupa cara melakukan enkripsi, namun sudah dijelaskan commandnya secara baik di thread SCELE
  • Peserta belum terbiasa melakukan perekaman script
    • Untuk delay, peserta lupa jika ada delay pada PS1
    • Harus mengulangi perekaman script dari awal jika terdapat kesalahan ketika merekam script
    • Peserta tidak tahu bahwa akan ada karakter tambahan muncul jika melakukan copy (CTRL+C) dan paste (CTRL+V) pada script
  • Peserta belum terbiasa dengan memasang tambahan halaman pada GitHub Pages
  • Terdapat peserta yang kurang teliti dalam penamaan file sehingga akan tercatat oleh script bahwa dia tidak mengumpulkan. Solusinya sebaiknya dicek terlebih dahulu sebelum deadline

- UAS Tahap 1
  • Peserta tidak mengetahui bahwa tujuan utama UAS tahap 1 adalah agar memahami proses UAS, seharusnya disebutkan tujuannya terlebih dahulu
  • Untuk pemeriksaan cek SEBELA, awalnya peserta belum tahu apa artinya SEQNO atau SEQOK dan SUMOK atau SUMNO
  • Script milik tetangga tidak dimulai dengan "Script started on .... " sehingga harus memberi tahu tetangga untuk membenarkannya 
  • Peserta mengira pengecekan cek SEBELA hanya bisa dilakukan dengan pembuatan script, namun ternyata diperbolehkan untuk mengecek manual
  • Peserta terkadang lupa untuk memverifikasi apakah hasil enkripsi dama dengan aslinya
  • Peserta baru memahami mengenai SHA1SUM dan SHA1SUM.asc, terkadang ada yang lupa jika file pada direktori berubah, harus dilakukan pembuatan SHA1SUM dan SHA1SUM.asc kembali
  • Jika kebingungan, peserta akan bertanya ke peserta lainnya. Namun, jika instruksi dirasa kurang jelas, maka terdapat peserta yang menanyakan di forum SCELE

- UAS Tahap 2
  • Pembentukan kelompok dilakukan dengan sistem bergiliran, peserta kebingungan dengan sistem pembentukan kelompok
  • Terdapat perubahan kapasitas anggota kelompok yang sebelumnya tidak ditentukan, menjadi 6 saja. Namun, karena jumlah kelompok tidak dapat menampung semuanya, maka dibebaskan kapasitas kelompok.
  • Karena tugas merupakan tugas kelompok, maka ada kemungkinan peserta mengerjakan tugasnya tidak sesuai porsinya (bisa jadi dia saja yang mengerjakan atau dia tidak mengerjakan sama sekali, bergantung pada anggota lain)
  • Peserta yang tidak teliti dalam mengumpulkan berkas, maka langsung diberikan status TERM
  • Kendala, kekurangan, dan kelebihan lainnya sudah dijelaskan di atas

- UAS Tahap 3
  • Terdapat perbedaan status antara TERM2, TERM3, dan TUGAS3
  • Karena penulis berstatus TERM3, maka tahap 3 opsional dan deadlinenya tidak singkat (sampai UAS tahap 5 selesai)
  • Pembentukan kelompok dilakukan berdasarkan status
  • Untuk permasalahan kesalahan 0000-mypub.txt, peserta ada yang lupa bahwa berkasnya merupakan secret key, bukan public key.
  • Beberapa peserta lupa untuk memverifikasi 0000-mypub.txt
  • Kendala, kekurangan, dan kelebihan lainnya sudah dijelaskan di atas

- UAS Tahap 4
  • Terdapat peserta yang lupa untuk menghapus namanya di berkas kelompok utama (sebelum pindah membentuk kelompok lain)
  • Waktu pengerjaan lebih singkat, tidak 24 jam seperti tahap-tahap sebelumnya
  • Peserta lupa untuk menjalankan 'make clean' sehingga hasil compile masih ada pada folder pengumpulan
  • Terdapat peserta yang suka absen di detik-detik terakhir
  • Peserta masih belum memahami mengenai penggunaan sem_destroy()
  • Kendala, kekurangan, dan kelebihan lainnya sudah dijelaskan di atas

- UAS Tahap 5
  • Peserta yang TERM pada tahap-tahap sebelumnya baru mengetahui informasi mengenai diharuskan push berkas 0008-DONE-NO-MORE-PUSH.txt.asc sebagai tanda selesai
  • Kendala, kekurangan, dan kelebihan lainnya sudah dijelaskan di atas

- Pembentukan Kelompok
  • Pada tahap 2, sistem pembentukan kelompok dilakukan dengan sistem bergiliran sehingga peserta kebingungan menunggu semua kelompok sudah terisi terlebih dahulu
  • Terdapat perubahan kapasitas anggota kelompok yang sebelumnya tidak ditentukan, menjadi 6 saja. Namun, karena jumlah kelompok tidak dapat menampung semuanya, maka dibebaskan kapasitas kelompok
  • Peserta lupa menghapus namanya dari berkas kelompok yang awal

- SCELE
  • Thread SCELE sangat banyak terutama ketika pelaksanaan ujian. Karena banyak yang bertanya dan membuat thread baru, maka informasi penting bisa tenggelam. 
  • Perlu penulusan forum secara dalam apabila ingin melihat thread-thread sebelumnya
  • Ada peserta yang bertanya tidak tahu dan belum mencari informasi dan ada juga yang sudah mencari terlebih dahulu sebelumnya sebelum bertanya
  • Peserta tidak sering mengecek SCELE secara berkala. Penulis mengaku hanya mengecek SCELE 2-3 kali per minggu. Jika ada informasi penting, biasanya mendapat informasi dari peserta lain terlebih dahulu
  • Ada peserta yang tidak nyaman untuk bertanya langsung, sehingga enggan membuka thread baru
  • Peserta lebih suka "screenshot" daripada copy paste karena copy paste mengharuskan peserta melakukan formatting ketika mengetik pada forum. "Screenshot" cukup diupload saja. Akan tetapi, walaupun praktis, hal ini menyulitkan peserta lain untuk melakukan replikasi terhadap kode peserta lainnya (harus mengetik manual)

- GitHub
  • Peserta lebih suka interface web dibanding menggunakan command line
  • Peserta menghapus commit karena melakukan kesalahan message pada commit, seperti seharusnya "OS201 akunGithub"  • Peserta menghapus commit karena melakukan kesalahan seperti terdapat kesalahan berkas pada commit tersebut, padahal seharusnya cukup membuat commit baru yang berisikan menghapus berkas tersebut
  • Terdapat peserta yang lebih suka melakukan "git add ." karena lebih praktis padahal seharusnya dicek terlebih dahulu berkas yang ingin dipush

- Problems
  • Karena ini pertama kalinya UAS dilakukan secara remote, maka ada kemungkinan perbedaan timezone. Sebelumnya, dosen penguji membuat script pengecekan yang berbasis timezone WIB
  • Peserta melakukan typo penamaan file, seharusnya dicek terlebih dahulu
  • Peserta mengira hasil enkripsi dapat dipush dengan melakukan copas, namun hal tersebut membuat berkas tidak bisa diverifikasi. Seharusnya push dilakukan menggunakan command line
  • Peserta tidak mengetahui perekaman script merekam juga behavior copy, paste, penghapusan (backspace) sehingga harus manual jika ingin menghapus atau membuat script dari awal lagi
  • Sebelum UAS dimulai, terdapat penjelasan status per tahap. Karena tidak adanya penjelasan, peserta kebingungan atas status-status yang dibuat. Ketika UAS berjalan, penamaan status juga berubah.
